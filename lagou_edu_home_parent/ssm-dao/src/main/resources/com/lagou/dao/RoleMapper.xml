<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lagou.dao.RoleMapper">

    <select id="findAllRole" parameterType="com.lagou.domain.Role" resultType="com.lagou.domain.Role">
        select * from roles
        <where>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
        </where>
    </select>

    <!--根据角色id查询关联的菜单id-->
    <select id="findMenuByRoleId" parameterType="int" resultType="int">
        SELECT m.id FROM
            roles r INNER JOIN role_menu_relation rm ON r.id=rm.role_id
            INNER JOIN menu m ON rm.menu_id=m.id
        WHERE r.id=#{id}
    </select>

    <!--清空角色菜单中间表的关联关系-->
    <delete id="deleteRoleContextMenu" parameterType="int">
        delete from role_menu_relation where role_id = #{rid}
    </delete>

    <!--为角色菜单关联表添加新的关联关系-->
    <insert id="RoleContextMenu" parameterType="com.lagou.domain.Role_menu_relation">
        insert into role_menu_relation values(null,#{menuId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>

    <!--删除角色-->
    <delete id="deleteRole" parameterType="int">
        delete from roles where id = #{rid}
    </delete>

    <!--获取角色拥有的资源分类id集合 public List<Integer> findResourceCategoryIdsByRoleId(Integer roleId);-->
    <select id="findResourceCategoryIdsByRoleId" parameterType="int" resultType="int">
        SELECT DISTINCT
          re.category_id
        FROM
          resource re
          INNER JOIN role_resource_relation rr
            ON re.id = rr.resource_id
          INNER JOIN roles ro
            ON ro.id = rr.role_id
        WHERE ro.id = #{roleId}
    </select>

    <!--获取角色拥有的资源分类信息 public List<ResourceCategory> findResourceCategoryListByIds(List<Integer> ids);-->
    <select id="findResourceCategoryListByIds" parameterType="list" resultType="com.lagou.domain.ResourceCategory">
        select * from resource_category
        <where>
            <foreach collection="list" open="id in (" close=")" item="category_id" separator=",">
                #{category_id}
            </foreach>
        </where>
    </select>

    <!--获取角色拥有的资源信息 public List<Resource> findRoleResource(Integer roleId);-->
    <select id="findResourceListByRoleId" parameterType="int" resultType="com.lagou.domain.Resource">
        SELECT DISTINCT
          re.*
        FROM
          resource re
          INNER JOIN role_resource_relation rr
            ON re.id = rr.resource_id
          INNER JOIN roles ro
            ON ro.id = rr.role_id
        WHERE ro.id = #{roleId}
    </select>

    <!--根据角色id清空角色菜单关联表关系信息 public void deleteRoleContextResource(Integer roleId);-->
    <delete id="deleteRoleContextResource" parameterType="int">
        delete from role_resource_relation where role_id = #{roleId}
    </delete>

    <!--为角色分配菜单 public void roleContextResource(Role_Resource_Relation role_resource_relation);-->
    <insert id="roleContextResource" parameterType="com.lagou.domain.Role_Resource_Relation">
        insert into role_resource_relation values(null,#{resourceId},#{roleId},#{createdTime},
        #{updatedTime},#{createdBy},#{updatedBy})
    </insert>

    <!--添加角色  public void saveRole(Role role);-->
    <insert id="saveRole" parameterType="com.lagou.domain.Role">
        insert into roles values(null,#{code},#{name},#{description},#{createdTime},#{updatedTime},
        #{createdBy},#{updatedBy})
    </insert>

    <!--修改角色  public void updateRole(Role role);-->
    <update id="updateRole" parameterType="com.lagou.domain.Role">
        update roles
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null and code != ''">
                code = #{code},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy},
            </if>
            <if test="updatedBy != null">
                updated_by = #{updatedBy},
            </if>
        </trim>
        <where>
            <if test="id != null and id != ''">
                id = #{id}
            </if>
        </where>
    </update>

    <resultMap id="roleMenuResult" type="com.lagou.domain.Menu">

        <id column="id" property="id"></id>
        <result column="href" property="href"></result>
        <result column="icon" property="icon"></result>
        <result column="name" property="name"></result>
        <result column="parent_id" property="parentId"></result>
        <result column="description" property="description"></result>
        <result column="orderNum" property="order_num"></result>
        <result column="shown" property="shown"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="updated_time" property="updatedTime"></result>
        <result column="created_by" property="createdBy"></result>
        <result column="updated_by" property="updatedBy"></result>

        <collection property="subMenuList" ofType="com.lagou.domain.Menu" select="findAllMenu" column="id"></collection>

    </resultMap>


    <!--查询所有父子菜单信息-->
    <select id="findAllMenu" parameterType="int" resultMap="roleMenuResult">
        select * from menu where parent_id = #{pid}
    </select>
</mapper>